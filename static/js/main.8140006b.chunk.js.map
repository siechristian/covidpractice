{"version":3,"sources":["Components/Country/Country.js","Components/CountryList/CountryList.js","Components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","countries","stats","className","src","country","alt","name","cases","recoverred","deaths","recovered","CountryList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","response","json","this","console","log","forEach","a","alpha2","data","prevState","concat","filteredCountries","filter","toLowerCase","includes","href","rel","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAkBeA,G,YAfC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC7B,OACC,sBAAKC,UAAU,UAAf,UACC,qBAAKC,IAAG,sCAAiCF,EAAMG,QAAvC,gBAA8DC,IAAG,kBAAaL,EAAUM,QAChG,6BAAKN,EAAUM,OACf,sBAAKJ,UAAU,QAAf,UACC,kDAAmBD,EAAMM,SACzB,kDAAiBN,EAAMM,MAAvB,cAAkCN,EAAMO,WAAxC,cAAwDP,EAAMQ,QAA9D,OACA,+CAAgBR,EAAMQ,UACtB,kDAAmBR,EAAMS,qBCHdC,G,MANK,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,MAAuB,EAAhBD,UAC7B,OACC,qBAAKE,UAAU,cAAf,SAA8BD,EAAMW,KAAI,SAACR,GAAD,OAAa,cAAC,EAAD,CAA+BH,MAAOG,GAAxBA,EAAQA,gBCW9DS,G,MAbG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACjC,OACC,qBAAKb,UAAU,aAAf,SACC,uBACCc,KAAK,SACLd,UAAU,SACVY,YAAaA,EACbG,SAAUF,QCmDCG,E,kDAvDd,aAAe,IAAD,8BACb,gBAuBDH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAtB3D,EAAKC,MAAQ,CACZvB,MAAO,GACPD,UAAW,GACXqB,YAAa,IALD,E,yMAUUI,MAAM,yC,cAAvBC,E,gBACkBA,EAASC,O,OAA3B3B,E,OACN4B,KAAKR,SAAS,CAAEpB,cAChB6B,QAAQC,IAAI9B,GACZ4B,KAAKJ,MAAMxB,UAAU+B,QAArB,uCAA6B,WAAO3B,GAAP,iBAAA4B,EAAA,sEACLP,MAAM,sCAAD,OAAuCrB,EAAQ6B,SAD/C,cACtBP,EADsB,gBAETA,EAASC,OAFA,QAEtBO,EAFsB,SAK3B,EAAKd,UAAS,SAACe,GAAD,MAAgB,CAC7BlC,MAAOkC,EAAUlC,MAAMmC,OAAO,CAAEF,aANN,2CAA7B,kCAAAN,KAAA,gB,qIAYS,IAAD,EACkCA,KAAKJ,MAAvCxB,EADA,EACAA,UAAWqB,EADX,EACWA,YAAapB,EADxB,EACwBA,MAC1BoC,EAAoBrC,EAAUsC,QAAO,SAAClC,GAAD,OAC1CA,EAAQE,KAAKiC,cAAcC,SAASnB,EAAYkB,kBAEjD,OACC,sBAAKrC,UAAU,MAAf,UACC,oBAAIA,UAAU,YAAd,iCACA,mBAAGA,UAAU,aAAb,2GAGA,cAAC,EAAD,CACCY,YAAY,6CACZC,aAAca,KAAKb,aACnBb,UAAU,eAGX,cAAC,EAAD,CAAaD,MAAOA,EAAOD,UAAWqC,IAEtC,qBAAKnC,UAAU,aAAf,SACC,mBAAGuC,KAAK,kDAAkDnB,OAAO,SAASoB,IAAI,aAA9E,6C,GA/CaC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8140006b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './country.css';\r\n\r\nconst Country = ({ countries, stats }) => {\r\n\treturn (\r\n\t\t<div className=\"country\">\r\n\t\t\t<img src={`https://www.countryflags.io/${stats.country}/flat/64.png`} alt={`Flag of ${countries.name}`} />\r\n\t\t\t<h2>{countries.name}</h2>\r\n\t\t\t<div className=\"cases\">\r\n\t\t\t\t<p>{`Confirmed : ${stats.cases}`}</p>\r\n\t\t\t\t<p>{`Active :  ${stats.cases} - ${stats.recoverred} - ${stats.deaths}`} </p>\r\n\t\t\t\t<p>{`Deaths : ${stats.deaths}`}</p>\r\n\t\t\t\t<p>{`Recovered : ${stats.recovered}`}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Country;\r\n","import Country from '../Country/Country';\r\nimport './countryList.css';\r\n\r\nconst CountryList = ({ stats, countries }) => {\r\n\treturn (\r\n\t\t<div className=\"countryList\">{stats.map((country) => <Country key={country.country} stats={country} />)}</div>\r\n\t);\r\n};\r\n\r\nexport default CountryList;\r\n","import React from 'react';\r\nimport './searchbox.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n\treturn (\r\n\t\t<div className=\"search-box\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tclassName=\"search\"\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\nimport './App.css';\nimport CountryList from './Components/CountryList/CountryList';\nimport SearchBox from './Components/SearchBox/SearchBox';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tstats: [],\n\t\t\tcountries: [],\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst response = await fetch('https://covid19-api.org/api/countries');\n\t\tconst countries = await response.json();\n\t\tthis.setState({ countries });\n\t\tconsole.log(countries);\n\t\tthis.state.countries.forEach(async (country) => {\n\t\t\tconst response = await fetch(`https://covid19-api.org/api/status/${country.alpha2}`);\n\t\t\tconst data = await response.json();\n\t\t\t// console.log(data);\n\t\t\tif (data)\n\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\tstats: prevState.stats.concat({ data })\n\t\t\t\t}));\n\t\t});\n\t}\n\thandleChange = (e) => this.setState({ searchField: e.target.value });\n\n\trender() {\n\t\tconst { countries, searchField, stats } = this.state;\n\t\tconst filteredCountries = countries.filter((country) =>\n\t\t\tcountry.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1 className=\"dashboard\">Covid 2019 Snapshot</h1>\n\t\t\t\t<p className=\"text-white\">\n\t\t\t\t\tNumber of countries limited by API provider. Feel free to refresh for a new set of countries!\n\t\t\t\t</p>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"                  Search by country name..\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tclassName=\"search-box\"\n\t\t\t\t/>\n\n\t\t\t\t<CountryList stats={stats} countries={filteredCountries} />\n\n\t\t\t\t<div className=\"allproject\">\n\t\t\t\t\t<a href=\"https://tioye.dev/dist/projects/allproject.html\" target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\tView my other projects\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}